name: 'Master Push'
on:
  push:
    branches:
      - master

jobs:

  release:
    name: 'Publish Release'
    runs-on: ubuntu-latest
    environment: production
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.push.head.sha }}
          fetch-depth: 0
      - name: 'Make release'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          set -x
          VERSION=v$(cat package/version)
          gh release create ${VERSION} --target ${{ github.sha }}
      - name: 'Update dependents'
        run: |
          set -x
          version="$(cat package/version)"
          curl --fail                                                          \
            -X POST                                                            \
            -H "Accept: application/vnd.github+json"                           \
            -H "Authorization: Bearer ${{ secrets.JENKINS_GITHUB_PAT }}"       \
            -H "X-GitHub-Api-Version: 2022-11-28"                              \
            https://api.github.com/repos/runtimeverification/devops/dispatches \
            -d '{"event_type":"on-demand-test","client_payload":{"repo":"runtimeverification/wasm-semantics","version":"'${version}'"}}'

  nix-cache:
    name: 'Populate Nix Cache'
    strategy:
      matrix:
        include:
          - runner: normal
          - runner: ARM64
    runs-on: ${{ matrix.runner }}
    steps:
      - name: 'Check out code'
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.push.head.sha }}
          fetch-depth: 0
      - name: 'Upgrade bash'
        if: ${{ contains(matrix.os, 'macos') }}
        run: brew install bash
      - name: 'Build and cache KWASM'
        uses: workflow/nix-shell-action@v3.0.3
        env:
          GC_DONT_GC: 1
          CACHIX_AUTH_TOKEN: '${{ secrets.CACHIX_PUBLIC_TOKEN }}'
        with:
          packages: jq
          script: |
            kwasm=$(nix build --extra-experimental-features 'nix-command flakes' .#kwasm --json | jq -r '.[].outputs | to_entries[].value')
            drv=$(nix-store --query --deriver ${kwasm})
            nix-store --query --requisites --include-outputs ${drv} | cachix push k-framework
